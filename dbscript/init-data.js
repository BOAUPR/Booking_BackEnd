const mongoose = require('mongoose')
const User = require('../models/User')
const Building = require('../models/Building')
const Room = require('../models/Room')
const Booking = require('../models/Booking')
const { ROLE } = require('../constant.js')
const { INSTITUTION } = require('../constant.js')
const Institution = require('../models/Institution')
mongoose.connect('mongodb://localhost:27017/project')
async function clearUser () {
  await User.deleteMany({})
  await Building.deleteMany({})
  await Room.deleteMany({})
  await Institution.deleteMany({})
  await Booking.deleteMany({})
}
async function main () {
  await clearUser()
  // for (let i = 1; i < 12; i++) {
  const InstitutionIF = new Institution({ name: INSTITUTION.IF })
  const user = new User({ username: 'user@mail.com', password: 'password', name: 'Naphat', surname: 'Tisonthi', roles: [ROLE.USER], institution: InstitutionIF })
  const approver = new User({ username: 'approver@mail.com', password: 'password', name: 'Jirat', surname: 'Klomkleaw', roles: [ROLE.APPROVER, ROLE.USER], institution: InstitutionIF })
  const approver2 = new User({ username: 'approver2@mail.com', password: 'password', name: 'Puchong', surname: 'Sumalanukun', roles: [ROLE.APPROVER, ROLE.USER], institution: InstitutionIF })
  const admin = new User({ username: 'admin@mail.com', password: 'password', name: 'Yannapon', surname: 'Surak', roles: [ROLE.ADMIN, ROLE.USER], institution: InstitutionIF })
  const localAdmin = new User({ username: 'local_admin@mail.com', password: 'password', name: 'Chenpob', surname: 'Nopakiat', roles: [ROLE.LOCAL_ADMIN, ROLE.ADMIN, ROLE.USER], institution: InstitutionIF })

  const BuildingIF = new Building({ code: 'IF', name: 'Informatics', floor: 11, institution: InstitutionIF })
  const room3C01 = new Room({ code: 'IF', name: '3C01', equipment: 'Computer+Projector+OHP', capacity: 210, floor: 3, building: BuildingIF, approveres: [approver, approver2] })
  const room4C01 = new Room({ code: 'IF', name: '4c01', equipment: 'Computer+Projector+OHP', capacity: 150, floor: 4, building: BuildingIF, approveres: [approver, approver2] })
  const room5C01 = new Room({ code: 'IF', name: '5c01', equipment: 'Computer+Projector+OHP', capacity: 100, floor: 5, building: BuildingIF, approveres: [approver, approver2] })
  const event1 = new Booking({ transactionDate: new Date('2022-04-09 06:30'), startDate: new Date('2022-04-09 08:00'), endDate: new Date('2022-04-09 16:00'), reason: 'ประชุมการเรียนการสอน', tool: 'Computer+Projector+OHP', room: room3C01, user: user, approveres: [approver, approver2] })

  user.save()
  approver.save()
  approver2.save()
  admin.save()
  localAdmin.save()
  InstitutionIF.users.push(user)
  InstitutionIF.users.push(approver)
  InstitutionIF.users.push(approver2)
  InstitutionIF.users.push(admin)
  InstitutionIF.users.push(localAdmin)
  BuildingIF.rooms.push(room3C01)
  BuildingIF.rooms.push(room4C01)
  BuildingIF.rooms.push(room5C01)
  InstitutionIF.save()
  BuildingIF.save()
  await event1.save()
  await room3C01.save()
  await room4C01.save()
  await room5C01.save()

  // BuildingMs
  const InstitutionMS = new Institution({ name: INSTITUTION.MS })
  const user1 = new User({ username: 'user1@mail.com', password: 'password', name: 'Tidarat', surname: 'Pawapattarakul', roles: [ROLE.USER], institution: InstitutionMS })
  const approver3 = new User({ username: 'approver@mail.com', password: 'password', name: 'Jakkarin', surname: 'Suksawaschon', roles: [ROLE.APPROVER, ROLE.USER], institution: InstitutionMS })
  const approver4 = new User({ username: 'approver2@mail.com', password: 'password', name: 'Pichet', surname: 'Wayalun', roles: [ROLE.APPROVER, ROLE.USER], institution: InstitutionMS })

  const BuildingMS = new Building({ code: 'MS', name: 'MedicalScience', floor: 7, institution: InstitutionMS })
  const room103 = new Room({ code: 'MS', name: '103', equipment: 'Presenter+TV+OHP+Tape', capacity: 60, floor: 1, building: BuildingMS, approveres: [approver3, approver4] })
  const room107 = new Room({ code: 'MS', name: '107', equipment: 'Presenter+TV+OHP+Tape', capacity: 32, floor: 1, building: BuildingMS, approveres: [approver3, approver4] })
  const room202 = new Room({ code: 'MS', name: '202', equipment: 'Presenter+TV+OHP+Tape', capacity: 98, floor: 2, building: BuildingMS, approveres: [approver3, approver4] })
  const event2 = new Booking({ transactionDate: new Date('2022-04-012 08:30'), startDate: new Date('2022-04-02 15:00'), endDate: new Date('2022-04-12 20:00'), reason: 'ติวหนังสือก่อนสอบ', tool: 'Presenter+TV+OHP+Tape', room: room107, user: user1, approveres: [approver3, approver4] })

  approver3.save()
  approver4.save()
  InstitutionMS.save()
  InstitutionMS.users.push(approver3)
  InstitutionMS.users.push(approver4)
  BuildingMS.rooms.push(room103)
  BuildingMS.rooms.push(room107)
  BuildingMS.rooms.push(room202)
  BuildingMS.save()
  await event2.save()
  await room103.save()
  await room107.save()
  await room202.save()

  // }
}

main().then(function () {
  console.log('Finish')
})
